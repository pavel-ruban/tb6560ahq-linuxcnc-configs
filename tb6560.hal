# Generated by stepconf at Sat Feb  9 14:17:20 2013
# If you make changes to this file, they will be
# overwritten when you run stepconf again
loadrt [KINS]KINEMATICS
#autoconverted  trivkins
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SLOW_PERIOD num_joints=[KINS]JOINTS
#loadrt probe_parport
#setp parport.0.reset-time 2000
loadrt stepgen step_type=0,0,0
loadrt ddt names=ddt_x,ddt_y,ddt_z
loadrt flipflop names=flipflop_tool
loadrt abs names=abs_x,abs_y,abs_z
loadrt not names=not_tool
#loadrt pwmgen output_type=1

addf stepgen.make-pulses base-thread
#addf pwmgen.make-pulses base-thread
#addf parport.0.reset base-thread

addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf stepgen.capture-position servo-thread
addf stepgen.update-freq servo-thread
#addf pwmgen.update servo-thread

addf ddt_x servo-thread
addf ddt_y servo-thread
addf ddt_z servo-thread
addf abs_x servo-thread
addf abs_y servo-thread
addf abs_z servo-thread
addf flipflop_tool servo-thread
addf not_tool servo-thread

#net spindle-cmd <= motion.spindle-speed-out => pwmgen.0.value
#net spindle-pwm <= pwmgen.0.pwm
#setp pwmgen.0.pwm-freq 0.0
#setp pwmgen.0.scale 1166.66666667
#setp pwmgen.0.offset 0.114285714286
#setp pwmgen.0.dither-pwm true
#net dout-00 <= motion.digital-out-00
#net dout-01 <= motion.digital-out-01
#net dout-02 <= motion.digital-out-02

#############################################################
#### Physic / simulator switch (comment out)		 ####
#############################################################
loadrt hal_parport cfg="0xcd00"
addf parport.0.read base-thread
addf parport.0.write base-thread
net spindle-on <= motion.spindle-on => parport.0.pin-17-out
setp parport.0.pin-17-out-invert 1
net xenable joint.0.amp-enable-out => parport.0.pin-16-out

net xstep => parport.0.pin-02-out
net xdir => parport.0.pin-03-out
setp parport.0.pin-02-out-invert 0
setp parport.0.pin-03-out-invert 0

net ystep => parport.0.pin-04-out
net ydir => parport.0.pin-05-out

setp parport.0.pin-04-out-invert 0
setp parport.0.pin-05-out-invert 0

net zstep => parport.0.pin-06-out
net zdir => parport.0.pin-07-out

setp parport.0.pin-06-out-invert 0
setp parport.0.pin-07-out-invert 0

net estop-ext <= parport.0.pin-15-in => iocontrol.0.emc-enable-in

#setp iocontrol.0.emc-enable-in 1

#############################################################
#### Connection of physic parport pins to step generator ####
#############################################################

net xstep <= stepgen.0.step
net xdir <= stepgen.0.dir

net ystep <= stepgen.1.step
net ydir <= stepgen.1.dir

net zstep <= stepgen.2.step
net zdir <= stepgen.2.dir

#############################################################
#### External stop signal, currently binded to reset pin ####
#############################################################
net estop-ext iocontrol.0.emc-enable-in
net estop-out <= iocontrol.0.user-enable-out

#############################################################
#### Connection of physic parport pins to step generator ####
#############################################################

#net dout-00 => parport.0.pin-02-out
#net dout-01 => parport.0.pin-06-out
#net spindle-pwm => parport.0.pin-09-out
#net dout-02 => parport.0.pin-14-out

#net home-x <= parport.0.pin-10-in
#net home-y <= parport.0.pin-11-in
#net home-z <= parport.0.pin-12-in

setp stepgen.0.position-scale [JOINT_0]SCALE
setp stepgen.0.steplen 24500
setp stepgen.0.stepspace 24500
setp stepgen.0.dirhold 45522
setp stepgen.0.dirsetup 45522
setp stepgen.0.maxaccel [JOINT_0]STEPGEN_MAXACCEL
net xpos-cmd joint.0.motor-pos-cmd => stepgen.0.position-cmd ddt_x.in
net xpos-vel ddt_x.out => abs_x.in
#net xpos-fb stepgen.0.position-fb => joint.0.motor-pos-fb
net xpos-cmd joint.0.motor-pos-fb
net xstep <= stepgen.0.step
net xdir <= stepgen.0.dir
net xenable joint.0.amp-enable-out => stepgen.0.enable
#net home-x => joint.0.home-sw-in

setp stepgen.1.position-scale [JOINT_1]SCALE
setp stepgen.1.steplen 24500
setp stepgen.1.stepspace 24500
setp stepgen.1.dirhold 45522
setp stepgen.1.dirsetup 45522
setp stepgen.1.maxaccel [JOINT_1]STEPGEN_MAXACCEL
net ypos-cmd joint.1.motor-pos-cmd => stepgen.1.position-cmd ddt_y.in
net ypos-vel ddt_y.out => abs_y.in
#net ypos-fb stepgen.1.position-fb => joint.1.motor-pos-fb
net ypos-cmd joint.1.motor-pos-fb
net ystep <= stepgen.1.step
net ydir <= stepgen.1.dir
net yenable joint.1.amp-enable-out => stepgen.1.enable
#net home-y => joint.1.home-sw-in

setp stepgen.2.position-scale [JOINT_2]SCALE
setp stepgen.2.steplen 24500
setp stepgen.2.stepspace 24500
setp stepgen.2.dirhold 45522
setp stepgen.2.dirsetup 45522
setp stepgen.2.maxaccel [JOINT_2]STEPGEN_MAXACCEL
net zpos-cmd joint.2.motor-pos-cmd => stepgen.2.position-cmd ddt_z.in
net zpos-vel ddt_z.out => abs_z.in
#net zpos-fb stepgen.2.position-fb => joint.2.motor-pos-fb
net zpos-cmd joint.2.motor-pos-fb
net zstep <= stepgen.2.step
net zdir <= stepgen.2.dir
net zenable joint.2.amp-enable-out => stepgen.2.enable
#net home-z => joint.2.home-sw-in

loadusr -W hal_manualtoolchange
#loadusr -W hal_hard_pause_resume
#net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change
#net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed
#net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number
#net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared

#loadrt or2 names=or2_0
#loadrt comp names=comp_x,comp_y,comp_z
#loadrt not names=inv_x
#
#net Xhomeswpos => comp_x.in0
#net Yhomeswpos => comp_y.in0
#net Zhomeswpos => comp_z.in0
#
#sets Xhomeswpos [JOINT_0]HOME
#sets Yhomeswpos [JOINT_1]HOME
#sets Zhomeswpos [JOINT_2]HOME
#
#net xpos-fb => comp_x.in1
#net ypos-fb => comp_y.in1
#net zpos-fb => comp_z.in1
#
#setp comp_x.hyst .02
#setp comp_y.hyst .02
#setp comp_z.hyst .02
#
##net Xhomesw <= comp_x.out
##net Yhomesw <= inv_x.out => joint.0.home-sw-in
##net Yhomesw_inv <= comp_y.out => inv_x.in0
#net CustomVal => joint.0.home-sw-in
#net CustomVal => joint.0.homed
#sets CustomVal 1
#
#net Zhomesw <= comp_z.out
#
#net Xhomesw => or2_0.in0
#net Zhomesw => or2_0.in1
#net XZhomesw or2_0.out => joint.1.home-sw-in joint.2.home-sw-in
#
#addf comp_x servo-thread
#addf comp_y servo-thread
#addf comp_z servo-thread
#
#addf or2_0 servo-thread
